[
    {
        "id": "assassins_shadow",
        "title": "Team Project: Assassin's Shadow",
        "type": "University",
        "banner_image": "/img/A_Shadow_banner.png",
        "description": "A two dimensional platformer game with movement, projectiles and item pickups.",
        "contents": "<h4>Summary:</h4><p>A module in university based around working to create a computer game with a group of programmers (1st year university work).</p><p><em>Created with: C, GML(Game Maker Language), Adobe flash,&nbsp;<em>GNU Image Manipulation Program</em>.&nbsp;</em></p><hr><h4>About:</h4><p>This project was a programmer only team, here I implemented the graphics for the menu, projectile art and props for level 2; each level was a different team members task to complete as part of the assignment.</p><p>I implemented the bouncing of the&nbsp;weapon projectile, there was also an issue of the game appearing to be very easy to beat if the player merely spammed the projectile, so I capped the firing rate of the weapon to around 3-4 projectiles, each projectile slowly regenerates to the capacity of 4 over time.</p><p>A bonus feature in level 2 includes water patches that apply a condition that slows the player down, there are also collision masks on rock formations that respond to both the player and weapons.</p><p>I also experimented with lighting in the final level after discussion with the creator, trying to add a level of ambient lighting from city lights and fires.</p><hr><h4>Final Scenes</h4><hr><p>- pending image gallery -</p><h4>Download</h4><hr><p>- pending available link -</p><hr><p><em>Project created by Project Team*, 2013-2014.</em></p><p><em>Module Lecturer: Mike Reddy&nbsp;( University of South Wales)</em></p><p><em>Project Team: Alan Davies, L. Haskins, J.Palmer, A. Miah, D. Kelly</em></p>"
    },
    {
        "id": "destructdroid",
        "title": "Team Project: Destruct Droid",
        "type": "University",
        "banner_image": "/img/DestructDroid_banner.jpg",
        "description": "Collaborative between programmers and technical artists remotely between two university campuses.",
        "contents": "<h4>Summary:</h4><p>A module in university based around multi-disciplined team work to create a computer game together (3rd year university work).</p><p><em>Created with: C/C++, 3DS Max, HLSL(Unreal Blueprint system).</em></p><p><em>Project members: Alan Davies, Jake Reynolds, James Evans, Kiran Pabari, Harry Conibere, Sean Skinner</em></p><hr><h4>About:</h4><p>During this project I was part of a team that focused on the engine aspect of implementation. We would handle any of the code specific aspects of the game, each member of the programmer team would have a duty assigned to us to aid in the completion of the project. In addition to the programmer team, we had an artist team that comprised of three artists; a management team, who moderated over progress; the design team, who designed the game concept and objectives.</p><p>I was part of the programming team that handled communications with the artist team, I would ensure that all their assets would make it into the engine and correctly scaled on import. this would involve heavy communication and software experience to correctly manage the assets.</p><p>I focused on creating material effects to increase the visual impact of different game features, this included visual effect shields, shaders on textures (for reflective properties on windows etc) and level design.</p><p>Near the release of the project for the assignment there were multiple tasks falling to each member, we ended up with considerable numbers of building models but only two Robot models and one tank model(which was far too small to use and scaled incorrectly).</p><p>I crafted together a tank and helicopter model that aided as an enemy, working closely with James Evans; who worked with AI aspects of the game, ensuring that the tank was able to move its turret separately from the body(to aim for shooting). I incorporated some changes right at the end with the addition of menu graphics and newly linked menu screens (Customise and Options) for the final release.</p><hr><h4>Final Scenes</h4><hr><p><em><strong>Project created by</strong>: &nbsp;team, 2015.</em></p><p><em><strong>Module Lecturer</strong>: Mike Reddy&nbsp;(University of South Wales)</em></p><hr><p><em><strong>Project team</strong></em></p><hr><p><em><strong>Programmers</strong>:&nbsp;Alan Davies, J. Reynolds, J. Evans, K. Pabari, H. Conibere and S. Skinner.</em></p><p><em><strong>Artists team</strong>: S. Smith, various artists.</em></p><p><strong>Design team</strong>: “JJ”, David, Rob</p>"
    },
    {
        "id": "procedural_material_generation",
        "title": "Dissertation – Procedural Materials",
        "type": "University",
        "banner_image": "/img/dissertation_banner.jpg",
        "description": "Real-time rendering techniques using shaders, using algorithmic expression to generate textures.",
        "contents": "<h4>Summary:</h4><p>A project about the creation of procedural textures with shader effects in computer graphics, utilising processing power to simulate real materials.</p><p ><em>Created with: C/C++, OpenGL, DirectX and Unreal Engine 4</em></p><hr><h4>About:</h4><p>This project involved the development of textures through mathematical algorithms based on the works of Ken <em>Perlin</em>&nbsp;(1983), the technique has been adapted to generate textures/materials that demonstrate a chaotic design. Using the graphical pipeline to control pixel data, mathematical functions can be applied to perlin noise to create unique and interesting material effects that can be generated with a relatively low CPU cost.</p><p>My dissertation looked into the creation of procedural textures in order to research into the possibility of generating 3D textures rather than commonly used 2D textures. I ended up developing the project on OpenGL(with GLSL), DirectX 11 (with HLSL) this gave me a greater understanding of the application of shaders and ability to transfer shaders between different languages.</p><p>The final goal was to generate “procedural materials for video game assets”, I finalised my project by creating the textures procedurally in Unreal Engine 4, applying the textures into the channel of a default model provided (First Person Shooter gun model). A sample of this can be seen below:</p><a href=\"..\\img\\projects\\proceduralgeneration\\procedural.png\" target=\"_blank\"><img  src=\"..\\img\\projects\\proceduralgeneration\\procedural.png\" width=\"424\" height=\"241\" scale=\"2\"></a><hr /><h4><strong>Samples:</strong></h4><p>Although there are differences, OpenGL presented a model handling bug. As a result the development was continued on DirectX 11 until finally the shader was translated for use in Unreal Engine 4.</p><p><strong><span >Video: Sine wave testing</span></strong></p><p>Below are video of the sine function being control by a time variable.</p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/imOZ9gtBvSs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe><p>A unique factor about textures generated in the shader with functions is that we can test multiple iterations of a function using time.</p><p>As time increases, the sine wave increases/decreases the frequency of waves rippling through the noise texture. For example, the wood texture appears to lose rings over time, regaining rings when the value enters a negative range.</p><hr /><p ><em>Project created by Alan Davies, 2016.</em></p><p ><em>Supervised by Paul Angel &amp; Carl Jones (2016, University of South Wales).</em></p>"
    },
    {
        "id": "java_opengl_engine",
        "title": "OpenGl Java Project: 3D Game Engine",
        "type": "Independent",
        "banner_image": "/img/3d-engine_banner.jpg",
        "description": "Post-University research and study: applying OpenGL experience towards Java language to express active C++ familiarity in Java.",
        "contents": "<h4>Summary:</h4><p>In my translation of Java skills from my studies of C++ in university, exploring the implications of using rendering and shader techniques.</p><hr><h4>About:</h4><p>This project uses OpenGL, a library known as \"Lightweight Java Game Library\" or LWJGL, this library is supported by \"Slick-Util\" to help manage sounds and images. The aim of this project was to implement common real-time rendering techniques that help create a 3D enviroments, respecting lighting from both global and point sources.</p><p>Whilst it seems like a simple objective, the creation, injection and lighting of 3D models can present some challenges, reading of external files, management of shader pipeline as well as camera implementation for navigation. I've attached some images below to showcase the results.</p><hr><h4>Sample Images</h4><p>Initial Scene:</p><a href=\"..\\img\\projects\\game_engine\\render_scene.jpg\" target=\"_blank\"><img  src=\"..\\img\\projects\\game_engine\\render_scene.jpg\" width=\"450\" height=\"267\" scale=\"2\"></a><p>Point Light & Ambient Lighting:</p><a href=\"..\\img\\projects\\game_engine\\light_point.jpg\" target=\"_blank\"><img  src=\"..\\img\\projects\\game_engine\\light_point.jpg\" width=\"450\" height=\"267\" scale=\"2\"></a><p>Day Skybox:</p><a href=\"..\\img\\projects\\game_engine\\skybox_day.jpg\" target=\"_blank\"><img  src=\"..\\img\\projects\\game_engine\\skybox_day.jpg\" width=\"450\" height=\"267\" scale=\"2\"></a><p>Night Skybox:</p><a href=\"..\\img\\projects\\game_engine\\skybox_night.jpg\" target=\"_blank\"><img  src=\"..\\img\\projects\\game_engine\\skybox_night.jpg\" width=\"450\" height=\"267\" scale=\"2\"></a><p>Dragon model credit: Stanford University Dragon model</p><a href=\"..\\img\\projects\\game_engine\\stanford_uni_shaderdragon.jpg\" target=\"_blank\"><img  src=\"..\\img\\projects\\game_engine\\stanford_uni_shaderdragon.jpg\" width=\"450\" height=\"267\" scale=\"2\"></a><p>Dragon model credit: Stanford University Dragon model</p><hr><p>On reflection after industry, I can definitely see areas where this project could be made more maintainable - sadly this project suffers from a concrete dependency on a Jar that is no longer available, this drove a lot of the vector mathematics as well as texture loaders. This has presented a block on returning to this project, but the value from creating this project served an important purpose; exploring Java and implementing real-time rendering techniques in a newly introduced programming language.</p><hr><h4>Final Scenes</h4><hr><p>- pending image gallery/carousel -</p></h4><hr>"
    },
    {
        "id": "unity_research",
        "title": "Unity Research Project: C#",
        "type": "Independent",
        "banner_image": "/img/unity_banner.jpg",
        "description": "Post-University research and study: exploring Unity engine, building three-dimensional spaces with shaders, custom textures and models.",
        "contents": "<h4>Summary:</h4><p>An investigative project utilising my combined skills after university; exploring C#, .NET functionality and Cg Shader language.</p><hr><h4>About:</h4><p>This project was originally developed as to learn unity for an internship with a 3D based company, sadly the prototype sent out did not recieve any feedback, but I continued to investigate Unity 3D to expand my knowledge in the engine.</p><p>This project includes script-driven menus, scenes exploring 3D graphic shaders, physics, custom character controller, camera movement and .NET/system file handling.</p><p><strong>.NET usage</strong></p><p>A major feature of the .NET system in this project is the reading of files store in a public area of the projects file system. This script reads all the files, stores the names of all material files and then uses the name references to add the materials to a list that can be called upon else where.</p><p>This .NET driven system was developed due to poor support that Unity has with handling extreme numbers of materials; requiring manual click/dragging of materials to a public array. This newly created system allows for hundreds (possibly more) materials to be automatically assigned for use.</p><p><strong>Custom Raycaster</strong></p><p>Another massive development of this project is custom ray caster, the unity character controller struggles to use ray casting to target objects in a scene with a first person camera, this is due to the hiding of the mouse pointer (the dependency), I have written a custom raycaster that enables the use of interaction with the first person camera controller.</p><hr><h4>Final Scenes</h4><hr><p>- pending image gallery/carousel -</p><hr><h4><span>GitHub Repository:</span></h4><p>pending</p><hr><p><em>Created with: C#, MonoDevelop&nbsp;and Cg shader language.</em></p><p><em>Created by: Alan Davies</em></p><hr />"
    },
    {
        "id": "project_vale",
        "title": "Full-Stack Application: Project Vale",
        "type": "Independent",
        "banner_image": "/img/projectvale_banner.jpg",
        "description": "Java refresh and full-stack application, including Java-8, JDBC connector, Spring, Junit, Javascript, React.",
        "contents": "<h4>Summary:</h4><p>After 2021 I had to leave my role in QA ltd, partly due to my own health, but also because my family suffered some declining health issues that meant they needed assistance.</p><p>It wasn't until 2022 that I had an opportunity to to focus back on coding and knew that I would have to create a system to add programming to my day to day routine again, as such, I decided on creating a repository that would outline the skills I would refresh, covering existing topics as well as some new topics such as React.</p><hr /><h4>About:</h4><p>As part of my refresh I wanted to cover the primary full-stack development techniques, after awhile such techniques can fall out of memory so I was eager to ensure I'd implement them some where, part of this refresh is also about ensuring I have projects that I can refer back to and build upon.</p><h4>Existing Skills:</h4><ul><li>Git and SVN</li><li>Agile & issue tracking</li><li>Java 8 & Maven Build</li><li>Junit & Mockito</li><li>JDBC</li><li>Spring API</li><li>Node.js & Javascript</li><li>Cucumber & Gherkin</li><li>Git and SVN</li></ul><p>Whilst I covered topics I knew, I always wanted to expand my skills set, thus I began to look into React and how it differs from my AngularJS knowledge that QA ltd provided me; this was partly due to an exploration of Angular9 and wishing to balance the benefits and drawbacks of each framework.</p><h4>Repository link:</h4><hr /><ul><li><a href=\"https://github.com/MorickClive/Project-Vale\" target=\"_blank\">[ Project Vale Repository ]</a></li><li><a href=\"https://github.com/MorickClive/Vale-React-Practice#vale-react-practice\" target=\"_blank\">[ Project Vale Full-Stack Repo ]</a></li></ul><hr /><h4>Additional:</h4><details><summary>expand</summary><p>Example repo feature-branch adherence:</p><a href=\"https://github.com/MorickClive/Vale-Java-Practice/network\" target=\"_blank\">[ Example Feature Branch Model ]</a><p>Issue Tracking:</p><ul><li><a href=\"https://github.com/MorickClive/Vale-Java-Practice/issues?q=is%3Aissue+is%3Aclosed\" target=\"_blank\">[ Vale-Java ]</a></li><li><a href=\"https://github.com/MorickClive/Vale-JDBC-Practice/issues?q=is%3Aissue+is%3Aclosed\" target=\"_blank\">[ Vale-JDBC ]</a></li><li><a href=\"https://github.com/MorickClive/Vale-SpringREST-Practice/issues?q=is%3Aissue+is%3Aclosed\" target=\"_blank\">[ Vale-SpringAPI ]</a></li></ul><p>The name \"Vale\" came from a set of names from a Raid Set in Guild Wars 2, it was a means of creating an arbitrary number of potential projects that would eventually become a set of significant repositories on my github.<br /><br /><p>The raid instances are titled as following:</p><ul><li>Spirit [Vale]</li><li>Salvation [Pass]</li><li>[Stronghold] of the Faithful</li><li>[Bastion] of the Penitent</li><li>[Hall] of Chains</li><li>[Mythwright] Gambit</li><li>The Key of [Ahdashim]</li></ul></p></details><hr />"
    },
    {
        "id": "community_map_development",
        "title": "Command & Conquer: Community Map Development",
        "type": "Hobby",
        "banner_image": "/img/C&C_banner.png",
        "description": "A portfolio of custom Command & Conquer maps developed for the online community.",
        "contents": "<h4>Summary:</h4><p>Maps developed for the Command &amp; Conquer<em>™ </em>: Red Alert<em>™ </em>3 community. Some maps involving heavy scripting and level design considerations, I released these maps under the name “Tiberian Fiend” and achieved three spot lights by EA back when the community was active.</p><hr><h4>About:</h4><p>Before reaching university, my inspiration and motivation to develop video games spanned from my time after school and college. I would develop content that presented me an opportunity to create content for games I played, prolonging their life span and quality.</p><p>In time I started to produce high quality maps with persistent study, even looking into the creation of mods and development for the Command and Conquer series. Under the name “Tiberian Fiend” (A Command and Conquer reference to Tiberian Sun) I published content for the wider community on sites like <a href=\"https://www.ppmsite.com/\">Project Perfect Mod</a> and <a href=\"https://www.cnclabs.com/maps/\">CnC labs</a>, as I created more content I found myself thoroughly enjoying level design and scripting.</p><p>After submitting and reviewing the feedback of each map, I felt compelled to create more – expanding my knowledge of the community tool to its limits. This entire experience gives me a huge appreciate for the difficulties of level design and game development, a benefit of a tool such as the world build provides a limit, but knowing the key components of game design has further boosted my capability in planning and developing games.</p><hr><h4>Final Scenes</h4><hr><h4>&nbsp;<u>Competition winner</u></h4><p>As part of my creation efforts I entered a contest with “CnCMaps.com”, creating the map “Battle Base Koi” as my entry and succeeding at reaching first place. This contest was also highlighted by EA and included prizes by EA themselves for success: the rewards included two t-shirts, 1 Scrin mug and a signed autograph by Ric Flair (of which can be viewed below).</p><p><strong>Other successful entries</strong></p><p>In total, I received three spotlights from EA and create many maps in my spare time. Though this maybe considered just level design, I also created maps that redefined game modes and scripted new ones with their own success conditions. One of these scripted maps is known as Assassin’s Shadow and was also one of the maps that was highlighted by EA.</p><hr><h4><strong>Links</strong></h4><p><a href=\"https:www.cnclabs.com/forums/default.aspx?g=posts&amp;t=9040\">CnCLabs Forum post&nbsp;“<b>Battlebase Koi</b>“</a></p><p><a href=\"https:www.cnclabs.com/forums/default.aspx?g=posts&amp;t=9015\">CnCLabs Forum post “<strong>A Place in the Heavens</strong>“</a></p><hr><p><em>Created with:&nbsp;Command &amp; Conquer™: Red Alert™ &nbsp;3 World Builder,&nbsp;</em><em>(Tool set provided by EA)</em></p><p><em>Created by: Alan Davies(Tiberian Fiend), 2007-2010.</em></p><hr /><p><em>Disclaimer:<br />I do not claim to own any part of Command and Conquer Red Alert 3, all assets/engine code belong to their respective owners. These projects were built purely for the benefit of the Red Alert 3 community from publicly available tool sets.<br /><br />If you own this material and wish it removed please <a href=\"../contact/\">contact</a> me.</em></p><hr />"
    },
    {
        "id": "dst_mod",
        "title": "Mod: Warrick the Afflicted, Don't Starve Together",
        "type": "Hobby",
        "banner_image": "/img/Warrick_banner.png",
        "description": "A character mod that introduces a new custom character with unique items, structures and mechanics for Don't Starve Together game by Klei, available on the steam workshop.",
        "contents": "<h4>Summary:</h4><p>Back in 2017, I was on the other side of university but also seeking my first role after graduating.</p><p>During this time I was balancing my day between maintaining my technical skills and enjoying some down time on some of my favourite computer games. Being inspired by my capability to develop on game engines always merges both my passion for my gaming with my technical competence.</p><p><em>Created with:<br />LUA, XML, Don't Starve Mod Tools<br />Local Testing: Don't Starve Together Dedicated Server.&nbsp;</em></p><hr><h4>About:</h4><p>Part of the game Don't Start Together is an expanded multiplayer release of the earlier title Don't Starve, an generated world where the player must avoid death by ensuring their hunger, sanity and health meters are managed whilst overcoming obstacles in the world set againest them.</p><p>One of the challenges of this game is the balance of remaining alive and managing a sanity drain effect, this would allow shadow manifestations to harm the player if their sanity is low enough.<br />I wanted to create a new character whose perks enabled faster exploration capabilities at the risk of needing to be low in sanity to gain additional movement speed. </p><p>Don't Starves main characters all have drawbacks as well as benefits that make surviving a unique experience, with this in mind I decided to split the character into the following features/rules </p><ul><li>Group Perk: can craft obelisks that provide useful aura effects</li><li>Individual Perk: moves faster when closer to insanity</li><li>Drawback: sanity consistently falls</li></ul><p>Whilst this character has been a success and released with custom art and coding solutions, I found a job opportunity towards summer that then put this project on the backshelf in terms on maintaince.</p><p>Despite the many releases, the mod is still available to download and can be found below:</p><h4>Link to Steam Workshop page:</h4><hr><a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=935464768\" target=\"_blank\">[ Steam Workshop: Warrick the Afflicted ]</a><hr>"
    }
]